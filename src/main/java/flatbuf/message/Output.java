// automatically generated by the FlatBuffers compiler, do not modify

package flatbuf.message;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Output extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static Output getRootAsOutput(ByteBuffer _bb) { return getRootAsOutput(_bb, new Output()); }
  public static Output getRootAsOutput(ByteBuffer _bb, Output obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Output __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String outputname() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer outputnameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer outputnameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String title() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer titleAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer titleInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String id() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createOutput(FlatBufferBuilder builder,
      int outputnameOffset,
      int titleOffset,
      int idOffset) {
    builder.startTable(3);
    Output.addId(builder, idOffset);
    Output.addTitle(builder, titleOffset);
    Output.addOutputname(builder, outputnameOffset);
    return Output.endOutput(builder);
  }

  public static void startOutput(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addOutputname(FlatBufferBuilder builder, int outputnameOffset) { builder.addOffset(0, outputnameOffset, 0); }
  public static void addTitle(FlatBufferBuilder builder, int titleOffset) { builder.addOffset(1, titleOffset, 0); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(2, idOffset, 0); }
  public static int endOutput(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Output get(int j) { return get(new Output(), j); }
    public Output get(Output obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

